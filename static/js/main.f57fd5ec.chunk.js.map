{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","findtabs","tabs","selectedTabId","onTabSelected","isCurrent","some","tab","id","className","map","index","classNames","href","onClick","title","find","content","App","useState","selectedTab","setSelectTab","ReactDOM","render","document","getElementById"],"mappings":"kNAUaA,EAAwB,SAAC,GAMhC,IAAD,EAGsBC,EAPvBC,EAIC,EAJDA,KACAC,EAGC,EAHDA,cACAC,EAEC,EAFDA,cAGIC,EAAYH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,KAM9C,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKM,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAACH,EAAKI,GAAN,OACR,oBACE,UAAQ,MAERF,UAAWG,IAAW,CACpB,YAAaL,EAAIC,KAAOL,IACjBE,GAAuB,IAAVM,IALxB,SAQE,mBACEE,KAAI,WAAMN,EAAIC,IACd,UAAQ,UACRM,QAAS,kBAAMX,IAAkBI,EAAIC,IACnCJ,EAAcG,IAJlB,SAOGA,EAAIQ,SAbFR,EAAIC,WAmBjB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,iBA9BqBR,EA+BFC,EADnB,EA7BFD,EAASe,MAAK,SAAAT,GAAG,OAAKJ,IAAkBI,EAAIC,aA6B1C,aACG,EAAuBS,cC3CnBf,EAAO,CAClB,CAAEM,GAAI,QAASO,MAAO,QAASE,QAAS,eACxC,CAAET,GAAI,QAASO,MAAO,QAASE,QAAS,eACxC,CAAET,GAAI,QAASO,MAAO,QAASE,QAAS,gBAG7BC,EAAgB,WAAO,IAAD,EACjC,EAAoCC,mBAAcjB,EAAK,IAAvD,mBAAOkB,EAAP,KAAoBC,EAApB,KAMA,OACE,sBAAKZ,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,6CACsBP,EAAKc,MAAK,SAAAT,GAAG,OAAKa,EAAYZ,KAAOD,EAAIC,aAD/D,aACsB,EAA+CO,SAGrE,cAAC,EAAD,CACEb,KAAMA,EACNC,cAAeiB,EAAYZ,GAC3BJ,cAbgB,SAACG,GACrBc,EAAad,UCdjBe,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f57fd5ec.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Tab } from '../../react-app-env';\n\ntype Props = {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: (tab: Tab) => void;\n};\n\nexport const Tabs: React.FC<Props> = (\n  {\n    tabs,\n    selectedTabId,\n    onTabSelected,\n  },\n) => {\n  const isCurrent = tabs.some(tab => tab.id === selectedTabId);\n\n  const findSelectedTab = (findtabs: Tab[]) => (\n    findtabs.find(tab => (selectedTabId === tab.id))\n  );\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab, index) => (\n            <li\n              data-cy=\"Tab\"\n              key={tab.id}\n              className={classNames({\n                'is-active': tab.id === selectedTabId\n                  || (!isCurrent && index === 0),\n              })}\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => selectedTabId !== tab.id && (\n                  onTabSelected(tab)\n                )}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n      <div className=\"block\" data-cy=\"TabContent\">\n        {findSelectedTab(tabs)?.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './react-app-env';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectTab] = useState<Tab>(tabs[0]);\n\n  const onTabSelected = (tab: Tab) => {\n    setSelectTab(tab);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${tabs.find(tab => (selectedTab.id === tab.id))?.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTab.id}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}